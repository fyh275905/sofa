/******************************************************************************
*       SOFA, Simulation Open-Framework Architecture, version 1.0 beta 4      *
*                (c) 2006-2010 MGH, INRIA, USTL, UJF, CNRS                    *
*                                                                             *
* This library is free software; you can redistribute it and/or modify it     *
* under the terms of the GNU Lesser General Public License as published by    *
* the Free Software Foundation; either version 2.1 of the License, or (at     *
* your option) any later version.                                             *
*                                                                             *
* This library is distributed in the hope that it will be useful, but WITHOUT *
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       *
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License *
* for more details.                                                           *
*                                                                             *
* You should have received a copy of the GNU Lesser General Public License    *
* along with this library; if not, write to the Free Software Foundation,     *
* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA.          *
*******************************************************************************
*                               SOFA :: Modules                               *
*                                                                             *
* Authors: The SOFA Team and external contributors (see Authors.txt)          *
*                                                                             *
* Contact information: contact@sofa-framework.org                             *
******************************************************************************/



// File automatically generated by "generateTypedef"


#ifndef SOFA_TYPEDEF_Controller_double_H
#define SOFA_TYPEDEF_Controller_double_H

//Default files containing the declaration of the vector type
#include <sofa/defaulttype/VecTypes.h>
#include <sofa/defaulttype/RigidTypes.h>
#include <sofa/defaulttype/Mat.h>


#ifdef SOFA_GPU_CUDA
#include <sofa/gpu/cuda/CudaTypesBase.h>
#include <sofa/gpu/cuda/CudaTypes.h>
#endif
#ifdef SOFA_GPU_OPENCL
#include <sofa/gpu/opencl/OpenCLTypes.h>
#endif


#include <sofa/component/collision/ComplianceMatrixUpdateManager.h>
#include <sofa/component/collision/ComplianceMatrixUpdateManagerCarving.h>
#include <sofa/component/controller/EdgeSetController.h>
#include <sofa/component/controller/HandStateController.h>
#include <sofa/component/controller/JointSpringController.h>
#include <sofa/component/controller/LCPForceFeedback.h>
#include <sofa/component/controller/MechanicalStateController.h>
#include <sofa/component/controller/RespirationController.h>
#include <sofa/component/collision/TetrahedronCuttingManager.h>
#include <sofa/component/controller/VMechanismsForceFeedback.h>



//---------------------------------------------------------------------------------------------
//Typedef for ComplianceMatrixUpdateManager
typedef sofa::component::collision::ComplianceMatrixUpdateManager<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > ComplianceMatrixUpdateManager3d;



//---------------------------------------------------------------------------------------------
//Typedef for ComplianceMatrixUpdateManagerCarving
typedef sofa::component::collision::ComplianceMatrixUpdateManagerCarving<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > ComplianceMatrixUpdateManagerCarving3d;



//---------------------------------------------------------------------------------------------
//Typedef for EdgeSetController
typedef sofa::component::controller::EdgeSetController<sofa::defaulttype::StdRigidTypes<3, double> > EdgeSetControllerRigid3d;



//---------------------------------------------------------------------------------------------
//Typedef for HandStateController
typedef sofa::component::controller::HandStateController<sofa::defaulttype::StdRigidTypes<3, double> > HandStateControllerRigid3d;
typedef sofa::component::controller::HandStateController<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, double>, sofa::defaulttype::Vec<1, double>, double> > HandStateController1d;



//---------------------------------------------------------------------------------------------
//Typedef for JointSpringController
typedef sofa::component::controller::JointSpringController<sofa::defaulttype::StdRigidTypes<3, double> > JointSpringControllerRigid3d;



//---------------------------------------------------------------------------------------------
//Typedef for LCPForceFeedback
typedef sofa::component::controller::LCPForceFeedback<sofa::defaulttype::StdRigidTypes<3, double> > LCPForceFeedbackRigid3d;
typedef sofa::component::controller::LCPForceFeedback<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, double>, sofa::defaulttype::Vec<1, double>, double> > LCPForceFeedback1d;



//---------------------------------------------------------------------------------------------
//Typedef for MechanicalStateController
typedef sofa::component::controller::MechanicalStateController<sofa::defaulttype::StdRigidTypes<3, double> > MechanicalStateControllerRigid3d;
typedef sofa::component::controller::MechanicalStateController<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, double>, sofa::defaulttype::Vec<1, double>, double> > MechanicalStateController1d;



//---------------------------------------------------------------------------------------------
//Typedef for RespirationController
typedef sofa::component::controller::RespirationController<sofa::defaulttype::StdRigidTypes<3, double> > RespirationControllerRigid3d;
typedef sofa::component::controller::RespirationController<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > RespirationController3d;



//---------------------------------------------------------------------------------------------
//Typedef for TetrahedronCuttingManager
typedef sofa::component::collision::TetrahedronCuttingManager<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > TetrahedronCuttingManager3d;



//---------------------------------------------------------------------------------------------
//Typedef for VMechanismsForceFeedback
typedef sofa::component::controller::VMechanismsForceFeedback<sofa::defaulttype::StdRigidTypes<3, double> > VMechanismsForceFeedbackRigid3d;
typedef sofa::component::controller::VMechanismsForceFeedback<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, double>, sofa::defaulttype::Vec<1, double>, double> > VMechanismsForceFeedback1d;





#ifndef SOFA_FLOAT
typedef ComplianceMatrixUpdateManager3d ComplianceMatrixUpdateManager3;
typedef ComplianceMatrixUpdateManagerCarving3d ComplianceMatrixUpdateManagerCarving3;
typedef EdgeSetControllerRigid3d EdgeSetControllerRigid3;
typedef HandStateControllerRigid3d HandStateControllerRigid3;
typedef HandStateController1d HandStateController1;
typedef JointSpringControllerRigid3d JointSpringControllerRigid3;
typedef LCPForceFeedbackRigid3d LCPForceFeedbackRigid3;
typedef LCPForceFeedback1d LCPForceFeedback1;
typedef MechanicalStateControllerRigid3d MechanicalStateControllerRigid3;
typedef MechanicalStateController1d MechanicalStateController1;
typedef RespirationControllerRigid3d RespirationControllerRigid3;
typedef RespirationController3d RespirationController3;
typedef TetrahedronCuttingManager3d TetrahedronCuttingManager3;
typedef VMechanismsForceFeedbackRigid3d VMechanismsForceFeedbackRigid3;
typedef VMechanismsForceFeedback1d VMechanismsForceFeedback1;
#endif

#endif
