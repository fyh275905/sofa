/******************************************************************************
*       SOFA, Simulation Open-Framework Architecture, version 1.0 beta 4      *
*                (c) 2006-2009 MGH, INRIA, USTL, UJF, CNRS                    *
*                                                                             *
* This library is free software; you can redistribute it and/or modify it     *
* under the terms of the GNU Lesser General Public License as published by    *
* the Free Software Foundation; either version 2.1 of the License, or (at     *
* your option) any later version.                                             *
*                                                                             *
* This library is distributed in the hope that it will be useful, but WITHOUT *
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       *
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License *
* for more details.                                                           *
*                                                                             *
* You should have received a copy of the GNU Lesser General Public License    *
* along with this library; if not, write to the Free Software Foundation,     *
* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA.          *
*******************************************************************************
*                               SOFA :: Modules                               *
*                                                                             *
* Authors: The SOFA Team and external contributors (see Authors.txt)          *
*                                                                             *
* Contact information: contact@sofa-framework.org                             *
******************************************************************************/



// File automatically generated by "generateTypedef"


#ifndef SOFA_TYPEDEF_Engine_double_H
#define SOFA_TYPEDEF_Engine_double_H

//Default files containing the declaration of the vector type
#include <sofa/defaulttype/VecTypes.h>
#include <sofa/defaulttype/RigidTypes.h>
#include <sofa/defaulttype/Mat.h>



#include <sofa/component/engine/BoxROI.h>
#include <sofa/component/engine/ExtrudeSurface.h>
#include <sofa/component/engine/GroupFilterYoungModulus.h>
#include <sofa/component/engine/JoinPoints.h>
#include <sofa/component/engine/MergePoints.h>
#include <sofa/component/engine/MeshBarycentricMapperEngine.h>
#include <sofa/component/engine/PlaneROI.h>
#include <sofa/component/engine/PointsFromIndices.h>
#include <sofa/component/engine/PrimitivesInSphereROI.h>
#include <sofa/component/engine/RandomPointDistributionInSurface.h>
#include <sofa/component/engine/Spiral.h>
#include <sofa/component/engine/TextureInterpolation.h>
#include <sofa/component/engine/TransformEngine.h>
#include <sofa/component/engine/TransformPosition.h>
#include <sofa/component/engine/TrianglesInBoxROI.h>
#include <sofa/component/engine/TrianglesInPlaneROI.h>
#include <sofa/component/engine/TrianglesInSphereROI.h>
#include <sofa/component/engine/Vertex2Frame.h>



//---------------------------------------------------------------------------------------------
//Typedef for BoxROI
typedef sofa::component::engine::BoxROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > BoxROI3d;
typedef sofa::component::engine::BoxROI<sofa::defaulttype::StdRigidTypes<3, double> > BoxROIRigid3d;



//---------------------------------------------------------------------------------------------
//Typedef for ExtrudeSurface
typedef sofa::component::engine::ExtrudeSurface<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > ExtrudeSurface3d;



//---------------------------------------------------------------------------------------------
//Typedef for GroupFilterYoungModulus
typedef sofa::component::engine::GroupFilterYoungModulus<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > GroupFilterYoungModulus3d;



//---------------------------------------------------------------------------------------------
//Typedef for JoinPoints
typedef sofa::component::engine::JoinPoints<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > JoinPoints3d;



//---------------------------------------------------------------------------------------------
//Typedef for MergePoints
typedef sofa::component::engine::MergePoints<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > MergePoints3d;
typedef sofa::component::engine::MergePoints<sofa::defaulttype::StdRigidTypes<3, double> > MergePointsRigid3d;



//---------------------------------------------------------------------------------------------
//Typedef for MeshBarycentricMapperEngine
typedef sofa::component::engine::MeshBarycentricMapperEngine<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > MeshBarycentricMapperEngine3d;



//---------------------------------------------------------------------------------------------
//Typedef for PlaneROI
typedef sofa::component::engine::PlaneROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > PlaneROI3d;



//---------------------------------------------------------------------------------------------
//Typedef for PointsFromIndices
typedef sofa::component::engine::PointsFromIndices<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > PointsFromIndices3d;



//---------------------------------------------------------------------------------------------
//Typedef for PrimitivesInSphereROI
typedef sofa::component::engine::PrimitivesInSphereROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > PrimitivesInSphereROI3d;



//---------------------------------------------------------------------------------------------
//Typedef for RandomPointDistributionInSurface
typedef sofa::component::engine::RandomPointDistributionInSurface<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > RandomPointDistributionInSurface3d;



//---------------------------------------------------------------------------------------------
//Typedef for Spiral
typedef sofa::component::engine::Spiral<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > Spiral3d;



//---------------------------------------------------------------------------------------------
//Typedef for TextureInterpolation
typedef sofa::component::engine::TextureInterpolation<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, double>, sofa::defaulttype::Vec<1, double>, double> > TextureInterpolation2d;
typedef sofa::component::engine::TextureInterpolation<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> > TextureInterpolation1d;
typedef sofa::component::engine::TextureInterpolation<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > TextureInterpolation3d;



//---------------------------------------------------------------------------------------------
//Typedef for TransformEngine
typedef sofa::component::engine::TransformEngine<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, double>, sofa::defaulttype::Vec<1, double>, double> > TransformEngine2d;
typedef sofa::component::engine::TransformEngine<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> > TransformEngine1d;
typedef sofa::component::engine::TransformEngine<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > TransformEngine3d;
typedef sofa::component::engine::TransformEngine<sofa::defaulttype::StdRigidTypes<2, double> > TransformEngineRigid2d;
typedef sofa::component::engine::TransformEngine<sofa::defaulttype::StdRigidTypes<3, double> > TransformEngineRigid3d;



//---------------------------------------------------------------------------------------------
//Typedef for TransformPosition
typedef sofa::component::engine::TransformPosition<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > TransformPosition3d;



//---------------------------------------------------------------------------------------------
//Typedef for TrianglesInBoxROI
typedef sofa::component::engine::TrianglesInBoxROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > TrianglesInBoxROI3d;



//---------------------------------------------------------------------------------------------
//Typedef for TrianglesInPlaneROI
typedef sofa::component::engine::TrianglesInPlaneROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > TrianglesInPlaneROI3d;



//---------------------------------------------------------------------------------------------
//Typedef for TrianglesInSphereROI
typedef sofa::component::engine::TrianglesInSphereROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> > TrianglesInSphereROI3d;



//---------------------------------------------------------------------------------------------
//Typedef for Vertex2Frame
typedef sofa::component::engine::Vertex2Frame<sofa::defaulttype::StdRigidTypes<3, double> > Vertex2FrameRigid3d;





#ifndef SOFA_FLOAT
typedef BoxROI3d BoxROI3;
typedef BoxROIRigid3d BoxROIRigid3;
typedef ExtrudeSurface3d ExtrudeSurface3;
typedef GroupFilterYoungModulus3d GroupFilterYoungModulus3;
typedef JoinPoints3d JoinPoints3;
typedef MergePoints3d MergePoints3;
typedef MergePointsRigid3d MergePointsRigid3;
typedef MeshBarycentricMapperEngine3d MeshBarycentricMapperEngine3;
typedef PlaneROI3d PlaneROI3;
typedef PointsFromIndices3d PointsFromIndices3;
typedef PrimitivesInSphereROI3d PrimitivesInSphereROI3;
typedef RandomPointDistributionInSurface3d RandomPointDistributionInSurface3;
typedef Spiral3d Spiral3;
typedef TextureInterpolation2d TextureInterpolation2;
typedef TextureInterpolation1d TextureInterpolation1;
typedef TextureInterpolation3d TextureInterpolation3;
typedef TransformEngine2d TransformEngine2;
typedef TransformEngine1d TransformEngine1;
typedef TransformEngine3d TransformEngine3;
typedef TransformEngineRigid2d TransformEngineRigid2;
typedef TransformEngineRigid3d TransformEngineRigid3;
typedef TransformPosition3d TransformPosition3;
typedef TrianglesInBoxROI3d TrianglesInBoxROI3;
typedef TrianglesInPlaneROI3d TrianglesInPlaneROI3;
typedef TrianglesInSphereROI3d TrianglesInSphereROI3;
typedef Vertex2FrameRigid3d Vertex2FrameRigid3;
#endif

#endif
