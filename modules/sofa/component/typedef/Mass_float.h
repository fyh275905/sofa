/******************************************************************************
*       SOFA, Simulation Open-Framework Architecture, version 1.0 beta 4      *
*                (c) 2006-2009 MGH, INRIA, USTL, UJF, CNRS                    *
*                                                                             *
* This library is free software; you can redistribute it and/or modify it     *
* under the terms of the GNU Lesser General Public License as published by    *
* the Free Software Foundation; either version 2.1 of the License, or (at     *
* your option) any later version.                                             *
*                                                                             *
* This library is distributed in the hope that it will be useful, but WITHOUT *
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       *
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License *
* for more details.                                                           *
*                                                                             *
* You should have received a copy of the GNU Lesser General Public License    *
* along with this library; if not, write to the Free Software Foundation,     *
* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA.          *
*******************************************************************************
*                               SOFA :: Modules                               *
*                                                                             *
* Authors: The SOFA Team and external contributors (see Authors.txt)          *
*                                                                             *
* Contact information: contact@sofa-framework.org                             *
******************************************************************************/



// File automatically generated by "generateTypedef"


#ifndef SOFA_TYPEDEF_Mass_float_H
#define SOFA_TYPEDEF_Mass_float_H

//Default files containing the declaration of the vector type
#include <sofa/defaulttype/VecTypes.h>
#include <sofa/defaulttype/RigidTypes.h>
#include <sofa/defaulttype/Mat.h>



#include <sofa/component/mass/DiagonalMass.h>
#include <sofa/component/forcefield/HexahedronFEMForceFieldAndMass.h>
#include <sofa/component/mass/MatrixMass.h>
#include <sofa/component/mass/MeshMatrixMass.h>
#include <sofa/component/mass/UniformMass.h>



//---------------------------------------------------------------------------------------------
//Typedef for DiagonalMass
typedef sofa::component::mass::DiagonalMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, float> DiagonalMass3f;
typedef sofa::component::mass::DiagonalMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, float>, sofa::defaulttype::Vec<2, float>, float>, float> DiagonalMass2f;
typedef sofa::component::mass::DiagonalMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, float>, sofa::defaulttype::Vec<1, float>, float>, float> DiagonalMass1f;
typedef sofa::component::mass::DiagonalMass<sofa::defaulttype::StdRigidTypes<3, float>, sofa::defaulttype::RigidMass<3, float> > DiagonalMassRigid3f;
typedef sofa::component::mass::DiagonalMass<sofa::defaulttype::StdRigidTypes<2, float>, sofa::defaulttype::RigidMass<2, float> > DiagonalMassRigid2f;



//---------------------------------------------------------------------------------------------
//Typedef for HexahedronFEMForceFieldAndMass
typedef sofa::component::forcefield::HexahedronFEMForceFieldAndMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float> > HexahedronFEMForceFieldAndMass3f;



//---------------------------------------------------------------------------------------------
//Typedef for MatrixMass
typedef sofa::component::mass::MatrixMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Mat<3, 3, float> > MatrixMass3f;
typedef sofa::component::mass::MatrixMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, float>, sofa::defaulttype::Vec<2, float>, float>, sofa::defaulttype::Mat<2, 2, float> > MatrixMass2f;
typedef sofa::component::mass::MatrixMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, float>, sofa::defaulttype::Vec<1, float>, float>, sofa::defaulttype::Mat<1, 1, float> > MatrixMass1f;



//---------------------------------------------------------------------------------------------
//Typedef for MeshMatrixMass
typedef sofa::component::mass::MeshMatrixMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, float> MeshMatrixMass3f;
typedef sofa::component::mass::MeshMatrixMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, float>, sofa::defaulttype::Vec<2, float>, float>, float> MeshMatrixMass2f;
typedef sofa::component::mass::MeshMatrixMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, float>, sofa::defaulttype::Vec<1, float>, float>, float> MeshMatrixMass1f;



//---------------------------------------------------------------------------------------------
//Typedef for UniformMass
typedef sofa::component::mass::UniformMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, float> UniformMass3f;
typedef sofa::component::mass::UniformMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, float>, sofa::defaulttype::Vec<2, float>, float>, float> UniformMass2f;
typedef sofa::component::mass::UniformMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1, float>, sofa::defaulttype::Vec<1, float>, float>, float> UniformMass1f;
typedef sofa::component::mass::UniformMass<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<6, float>, sofa::defaulttype::Vec<6, float>, float>, float> UniformMass6f;
typedef sofa::component::mass::UniformMass<sofa::defaulttype::StdRigidTypes<3, float>, sofa::defaulttype::RigidMass<3, float> > UniformMassRigid3f;
typedef sofa::component::mass::UniformMass<sofa::defaulttype::StdRigidTypes<2, float>, sofa::defaulttype::RigidMass<2, float> > UniformMassRigid2f;





#ifdef SOFA_FLOAT
typedef DiagonalMass3f DiagonalMass3;
typedef DiagonalMass2f DiagonalMass2;
typedef DiagonalMass1f DiagonalMass1;
typedef DiagonalMassRigid3f DiagonalMassRigid3;
typedef DiagonalMassRigid2f DiagonalMassRigid2;
typedef HexahedronFEMForceFieldAndMass3f HexahedronFEMForceFieldAndMass3;
typedef MatrixMass3f MatrixMass3;
typedef MatrixMass2f MatrixMass2;
typedef MatrixMass1f MatrixMass1;
typedef MeshMatrixMass3f MeshMatrixMass3;
typedef MeshMatrixMass2f MeshMatrixMass2;
typedef MeshMatrixMass1f MeshMatrixMass1;
typedef UniformMass3f UniformMass3;
typedef UniformMass2f UniformMass2;
typedef UniformMass1f UniformMass1;
typedef UniformMass6f UniformMass6;
typedef UniformMassRigid3f UniformMassRigid3;
typedef UniformMassRigid2f UniformMassRigid2;
#endif

#endif
