/* Generated by Cython 0.28.3 */

#ifndef __PYX_HAVE__Sofa__SceneLoaderPY3
#define __PYX_HAVE__Sofa__SceneLoaderPY3

struct SceneLoaderPY3;
struct SceneLoaderPY3 : public sofa::simulation::SceneLoader {
  virtual bool canLoadFileExtension(char const *);
  virtual bool canWriteFileExtension(char const *);
  virtual void loadSceneWithArguments(char const *, std::vector<std::string>  const &, sofa::simulation::Node::SPtr *);
  virtual bool loadTestWithArguments(char const *, std::vector<std::string>  const &);
  virtual sofa::simulation::Node::SPtr load(char const *);
  virtual std::string getFileTypeDesc(void);
  virtual void getExtensionList(std::vector<std::string>  *);
  virtual ~SceneLoaderPY3();

  /* "Sofa/SceneLoaderPY3.pyx":20
 *         void addEntry(SceneLoader*)
 * 
 * cdef public cppclass SceneLoaderPY3(SceneLoader):             # <<<<<<<<<<<<<<
 *     bool canLoadFileExtension(const char *extension) with gil:
 *         return <bytes>extension in [b"py", b"py3", b"pyscn", b"py3scn"]
 */
};

#ifndef __PYX_HAVE_API__Sofa__SceneLoaderPY3

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C PyObject *registerLoader(int __pyx_skip_dispatch);

#endif /* !__PYX_HAVE_API__Sofa__SceneLoaderPY3 */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initSceneLoaderPY3(void);
#else
PyMODINIT_FUNC PyInit_SceneLoaderPY3(void);
#endif

#endif /* !__PYX_HAVE__Sofa__SceneLoaderPY3 */
