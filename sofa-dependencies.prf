includeOnce($$_FILE_) {

declare(blas,  blas.prf)
declare(boost,  boost.prf)
declare(cgal,   cgal.prf)
declare(cilk,   cilk.prf)
declare(cuda,   cuda.prf)
declare(opencl,  opencl.prf)
declare(flowvr, flowvr.prf)
declare(glut,   glut.prf)
declare(glew,   glew.prf)
declare(libpng, libpng.prf)
declare(libxml, libxml.prf)
declare(qt,     qt.prf)
declare(qtgui,  qtgui.prf, qt)
declare(zlib,   zlib.prf)
declare(thrust,   thrust.prf, cuda)
declare(rt,   rt.prf)
declare(system-metis,  system-metis.prf)
declare(system-taucs,  system-taucs.prf)
declare(eigen-unsupported,  eigen-unsupported.prf)

######################################################################
# Extlibs
######################################################################

declare(newmat,     extlibs/newmat)
declare(tinyxml,    extlibs/tinyxml)
declare(eigen,      extlibs/eigen-3.0.5/eigen.pro)
declare(qwt,        extlibs/qwt-6.0.1/src, qtgui rt)
declare(QGLViewer,  extlibs/libQGLViewer-2.3.3/QGLViewer, qtgui)
declare(miniFlowVR, extlibs/miniFlowVR, boost)
declare(csparse,    extlibs/csparse)
declare(cudpp,      extlibs/cudpp, cuda)
#declare(cudpp-svn,     extlibs/cudpp-svn/cudpp.pro, cuda)
declare(metis,      extlibs/metis)
declare(taucs,      extlibs/taucs, cilk metis system-metis blas)
declare(taucs_mt,   extlibs/taucs_mt, metis system-metis blas)
declare(colladadom, extlibs/colladadom, tinyxml)
declare(vrpn_quat,        extlibs/VRPN/quat/quat.pro)
declare(vrpn_client,        extlibs/VRPN/vrpn_client.pro, vrpn_quat)
declare(vrpn_atmellib,        extlibs/VRPN/vrpn/atmellib/vrpn_atmellib.pro, vrpn_quat)
declare(vrpn_server,        extlibs/VRPN/vrpn_server.pro, vrpn_quat vrpn_atmellib)

######################################################################
# Framework
######################################################################

declare(sofahelper,      framework/sofa/helper,      newmat glew glut libpng boost)
declare(sofadefaulttype, framework/sofa/defaulttype, sofahelper)
declare(sofacore,        framework/sofa/core,        sofadefaulttype)

######################################################################
# Modules
######################################################################

declare(sofasimulation, modules/sofa/simulation/common, sofacore tinyxml)
declare(sofatree,       modules/sofa/simulation/tree,   sofasimulation)
declare(sofagraph,      modules/sofa/simulation/graph,  sofasimulation)
declare(sofabgl,        modules/sofa/simulation/bgl,    sofasimulation)
declare(sofapml,        modules/sofa/simulation/filemanager/sofapml, sofacomponentcollision)

declare(sofa_base_topology, modules/sofa/component/sofa_base_topology.pro, sofatree eigen)
declare(sofa_base_linear_solver, modules/sofa/component/sofa_base_linear_solver.pro, sofatree)
declare(sofa_base_mechanics, modules/sofa/component/sofa_base_mechanics.pro, sofa_base_topology sofa_base_linear_solver)
declare(sofa_rigid, modules/sofa/component/sofa_rigid.pro, sofa_base_mechanics)
declare(sofa_sph_fluid, modules/sofa/component/sofa_sph_fluid.pro, sofa_base_mechanics)
declare(sofa_base_collision, modules/sofa/component/sofa_base_collision.pro, sofa_base_mechanics sofa_rigid miniFlowVR sofa_sph_fluid)
declare(sofa_base_animation_loop, modules/sofa/component/sofa_base_animation_loop.pro, sofatree)
declare(sofa_base_visual, modules/sofa/component/sofa_base_visual.pro, sofa_base_topology)
declare(sofa_loader, modules/sofa/component/sofa_loader.pro, sofatree zlib)
declare(sofa_deformable, modules/sofa/component/sofa_deformable.pro, sofa_base_topology)
declare(sofa_simple_fem, modules/sofa/component/sofa_simple_fem.pro, sofa_base_topology sofa_base_visual )
declare(sofa_object_interaction, modules/sofa/component/sofa_object_interaction.pro, sofa_deformable)
declare(sofa_explicit_ode_solver, modules/sofa/component/sofa_explicit_ode_solver.pro, sofatree)
declare(sofa_implicit_ode_solver, modules/sofa/component/sofa_implicit_ode_solver.pro, sofatree)
declare(sofa_eigen2_solver, modules/sofa/component/sofa_eigen2_solver.pro, sofa_dense_solver eigen eigen-unsupported )
declare(sofa_mesh_collision, modules/sofa/component/sofa_mesh_collision.pro, sofa_object_interaction sofa_base_collision)
declare(sofa_validation, modules/sofa/component/sofa_validation.pro, sofa_base_collision sofa_loader sofa_mesh_collision)
declare(sofa_exporter, modules/sofa/component/sofa_exporter.pro, sofatree zlib)
declare(sofa_engine, modules/sofa/component/sofa_engine.pro, sofa_mesh_collision)
declare(sofa_graph_component, modules/sofa/component/sofa_graph_component.pro, sofatree)
declare(sofa_topology_mapping, modules/sofa/component/sofa_topology_mapping.pro, sofa_base_topology)
declare(sofa_boundary_condition, modules/sofa/component/sofa_boundary_condition.pro, sofa_base_topology sofa_eigen2_solver )
declare(sofa_user_interaction, modules/sofa/component/sofa_user_interaction.pro, sofa_mesh_collision sofa_topology_mapping sofa_deformable sofa_boundary_condition sofa_graph_component)
declare(sofa_constraint, modules/sofa/component/sofa_constraint.pro, sofa_mesh_collision sofa_simple_fem sofa_implicit_ode_solver sofa_eigen2_solver eigen sofa_user_interaction)
declare(sofa_haptics, modules/sofa/component/sofa_haptics.pro, sofa_constraint)
declare(sofa_dense_solver, modules/sofa/component/sofa_dense_solver.pro, sofa_base_linear_solver)
declare(sofa_sparse_solver, modules/sofa/component/sofa_sparse_solver.pro, sofa_base_linear_solver sofa_implicit_ode_solver csparse metis)
declare(sofa_preconditioner, modules/sofa/component/sofa_preconditioner.pro, sofa_dense_solver sofa_sparse_solver sofa_implicit_ode_solver sofa_simple_fem)
declare(sofa_opengl_visual, modules/sofa/component/sofa_opengl_visual.pro, sofa_base_visual sofasimulation)
declare(sofa_eulerian_fluid, modules/sofa/component/sofa_eulerian_fluid.pro, sofatree)
declare(sofa_volumetric_data, modules/sofa/component/sofa_volumetric_data.pro, sofa_base_collision sofa_mesh_collision  sofa_user_interaction miniFlowVR)
declare(sofa_non_uniform_fem, modules/sofa/component/sofa_non_uniform_fem.pro, sofa_simple_fem sofa_opengl_visual sofa_dense_solver sofa_volumetric_data)
declare(sofa_non_uniform_fem_dev, modules/sofa/component/sofa_non_uniform_fem_dev.pro, sofa_non_uniform_fem eigen)
declare(sofa_advanced_fem, modules/sofa/component/sofa_advanced_fem.pro, sofa_base_topology eigen)
declare(sofa_mjed_fem, modules/sofa/component/sofa_mjed_fem.pro, sofa_base_topology eigen)
declare(sofa_advanced_interaction, modules/sofa/component/sofa_advanced_interaction.pro, sofa_implicit_ode_solver sofa_simple_fem sofa_constraint sofa_topology_mapping sofa_user_interaction sofa_misc_collision sofa_misc_collision_dev csparse sofa_misc_mapping)
declare(sofa_advanced_constraint, modules/sofa/component/sofa_advanced_constraint.pro, sofa_boundary_condition sofa_haptics sofa_constraint)
declare(sofa_taucs_solver, modules/sofa/component/sofa_taucs_solver.pro, sofatree sofa_base_linear_solver taucs taucs_mt system-taucs system-metis cilk)
declare(sofa_pardiso_solver, modules/sofa/component/sofa_pardiso_solver.pro, sofatree)
declare(sofa_misc_topology, modules/sofa/component/sofa_misc_topology.pro, sofa_non_uniform_fem zlib miniFlowVR)
declare(sofa_misc_topology_dev, modules/sofa/component/sofa_misc_topology_dev.pro, sofa_non_uniform_fem zlib)
declare(sofa_misc_mapping, modules/sofa/component/sofa_misc_mapping.pro, sofa_simple_fem sofa_rigid sofa_eigen2_solver )
declare(sofa_misc_mapping_dev, modules/sofa/component/sofa_misc_mapping_dev.pro, sofa_simple_fem)
declare(sofa_misc_forcefield, modules/sofa/component/sofa_misc_forcefield.pro, sofa_deformable sofa_boundary_condition sofa_misc_topology)
declare(sofa_misc_forcefield_dev, modules/sofa/component/sofa_misc_forcefield_dev.pro, sofa_boundary_condition sofa_misc_topology)
declare(sofa_misc_fem, modules/sofa/component/sofa_misc_fem.pro, sofa_simple_fem)
declare(sofa_misc_fem_dev, modules/sofa/component/sofa_misc_fem_dev.pro, sofa_advanced_fem)
declare(sofa_misc_engine, modules/sofa/component/sofa_misc_engine.pro, sofa_non_uniform_fem)
declare(sofa_misc_collision, modules/sofa/component/sofa_misc_collision.pro, sofa_mesh_collision sofa_constraint sofa_volumetric_data sofa_explicit_ode_solver sofa_implicit_ode_solver)
declare(sofa_misc_collision_dev, modules/sofa/component/sofa_misc_collision_dev.pro, sofa_mesh_collision sofa_misc_collision sofa_volumetric_data sofabgl)
declare(sofa_misc_solver, modules/sofa/component/sofa_misc_solver.pro, sofatree)
declare(sofa_misc_solver_dev, modules/sofa/component/sofa_misc_solver_dev.pro, sofatree)
declare(sofa_misc, modules/sofa/component/sofa_misc.pro, sofa_mesh_collision sofa_misc_topology sofa_topology_mapping sofagraph)

declare(sofa_misc_dev, modules/sofa/component/sofa_misc_dev.pro, sofa_base_collision sofa_misc_topology sofa_boundary_condition sofa_deformable sofa_advanced_fem  sofa_constraint)

declare(sofa_component_base, modules/sofa/component/sofa_component_base.pro, sofa_base_topology sofa_base_linear_solver sofa_base_mechanics sofa_rigid sofa_base_collision sofa_base_visual sofa_base_animation_loop)

declare(sofa_component_common, modules/sofa/component/sofa_component_common.pro, sofa_loader sofa_deformable sofa_simple_fem sofa_object_interaction sofa_explicit_ode_solver sofa_implicit_ode_solver sofa_eigen2_solver sofa_mesh_collision)

declare(sofa_component_general, modules/sofa/component/sofa_component_general.pro, sofa_validation sofa_exporter sofa_engine sofa_graph_component sofa_topology_mapping sofa_boundary_condition sofa_user_interaction sofa_constraint sofa_haptics sofa_dense_solver sofa_sparse_solver sofa_preconditioner sofa_opengl_visual)

declare(sofa_component_advanced, modules/sofa/component/sofa_component_advanced.pro, sofa_eulerian_fluid sofa_sph_fluid sofa_volumetric_data sofa_non_uniform_fem sofa_eigen2_solver)

declare(sofa_component_advanced_dev, modules/sofa/component/sofa_component_advanced_dev.pro, sofa_non_uniform_fem_dev sofa_advanced_fem sofa_mjed_fem sofa_advanced_constraint sofa_taucs_solver)

declare(sofa_component_misc, modules/sofa/component/sofa_component_misc.pro, sofa_misc_topology sofa_misc_mapping sofa_misc_forcefield sofa_misc_fem sofa_misc_engine sofa_misc_collision sofa_misc_solver sofa_misc)

declare(sofa_component_misc_dev, modules/sofa/component/sofa_component_misc_dev.pro, sofa_advanced_interaction sofa_misc_topology_dev sofa_misc_mapping_dev sofa_misc_forcefield_dev sofa_misc_fem_dev sofa_misc_collision_dev sofa_misc_solver_dev sofa_misc_dev)

declare(sofa_component, modules/sofa/component/sofa_component.pro, sofa_component_base sofa_component_common sofa_component_general sofa_component_advanced sofa_component_misc)

declare(sofa_component_dev, modules/sofa/component/sofa_component_dev.pro, sofa_component_advanced_dev sofa_component_misc_dev)

declare(sofagpucuda, modules/sofa/gpu/cuda/cuda.pro, sofahelper sofa_engine sofa_sph_fluid sofa_user_interaction sofa_volumetric_data cuda cudpp thrust)

declare(sofagpucuda_dev, modules/sofa/gpu/cuda/cuda_dev.pro, sofagpucuda sofa_preconditioner sofa_advanced_interaction sofa_misc_dev eigen csparse taucs taucs_mt system-taucs)

declare(sofagpuopencl, modules/sofa/gpu/opencl, sofahelper sofa_engine sofa_sph_fluid sofa_user_interaction opencl eigen csparse taucs taucs_mt system-taucs)

######################################################################
# Applications
######################################################################
#----- Sofa -----#
declare(sofagui,     applications/sofa/gui/libgui.pro,     sofa_graph_component sofa_base_collision sofa_user_interaction sofa_advanced_interaction sofa_base_visual)
declare(sofaguiqt,   applications/sofa/gui/qt,             sofagui qwt QGLViewer sofa_base_visual sofa_exporter sofa_loader sofa_opengl_visual sofa_misc_forcefield)
declare(sofaguimain, applications/sofa/gui/libguimain.pro, sofaguiqt sofaguiglut sofa_component sofagpucuda sofagpuopencl)
declare(sofaguiglut, applications/sofa/gui/glut,           sofagui glut)
#--- Projects ---#
declare(runSofa,          applications/projects/runSofa,          sofaguimain sofa_component_dev)
declare(generateDoc,      applications/projects/generateDoc,      sofa_component sofagpucuda)
declare(GenerateRigid,    applications/projects/GenerateRigid,    sofa_component sofagpucuda)
declare(generateTypedefs, applications/projects/generateTypedefs, sofaguimain)
declare(sofaTypedefs,	  applications/projects/sofaTypedefs,	  sofacore sofa_component sofa_component_dev)
declare(meshconv,         applications/projects/meshconv,         sofa_component)
declare(sofamodeler,      applications/projects/Modeler/lib,      sofaguimain sofa_component_dev)
declare(Modeler,          applications/projects/Modeler/exec,     sofamodeler sofa_component_dev sofagpucuda sofagpucuda_dev)
declare(sofaCUDA,         applications/projects/sofaCUDA,         sofaguimain sofagpucuda sofagpucuda_dev sofa_component_dev)
declare(sofaCUDA_Bench,   applications/projects/sofaCUDA_Bench,         sofaguimain sofa_component_dev sofa_base_linear_solver sofagpucuda sofagpucuda_dev)
declare(sofaOPENCL,       applications/projects/sofaOPENCL,         sofaguimain sofagpuopencl sofa_component_dev)		#opencl

#declare(sofaPython,      applications/projects/sofaPython,       sofaguimain sofa_component_dev)

declare(SofaFlowVR,       applications/projects/SofaFlowVR,       sofaguimain)
declare(SofaVRPNServer, applications/projects/SofaVRPNServer, vrpn_quat vrpn_atmellib vrpn_server)
declare(sofaInitTimer,    applications/projects/sofaInitTimer,    sofa_component sofagpucuda)
declare(sofaVerification, applications/projects/sofaVerification, sofa_component sofa_component_dev sofagpucuda)
declare(sofaInfo, applications/projects/sofaInfo, sofaguimain sofa_component_dev)
declare(sofaBatch, applications/projects/sofaBatch, sofa_component)
#declare(runLem,          applications/projects/fissuration/lem/exe,     sofaguimain)

declare(centerOfMassMapping,            applications/projects/BoostKernel/applications/centerOfMassMapping,             sofa_component sofaobjectcreator sofaguimain)
declare(centerOfMassMulti2MappingChain, applications/projects/BoostKernel/applications/centerOfMassMulti2MappingChain,  sofa_component sofaobjectcreator sofaguimain)
declare(centerOfMassMultiMappingChain,  applications/projects/BoostKernel/applications/centerOfMassMultiMappingChain,   sofa_component sofaobjectcreator sofaguimain)
declare(subsetMultimapping,             applications/projects/BoostKernel/applications/subsetMultimapping,              sofa_component sofaobjectcreator sofaguimain)

declare(sofatests,        tests,                                  sofacore)


# SofaDevices
#--- Tutorials ---#
declare(sofaobjectcreator,   			applications/tutorials/objectCreator,    				sofa_component sofa_component_dev)
declare(chainHybrid,         			applications/tutorials/chainHybrid,      				sofa_component sofaguimain sofaobjectcreator)
declare(houseOfCards,        			applications/tutorials/houseOfCards,     				sofa_component sofaguimain sofaobjectcreator)
declare(mixedPendulum,       			applications/tutorials/mixedPendulum,    				sofa_component sofaguimain)
declare(oneParticule,        			applications/tutorials/oneParticule,     				sofa_component sofaguimain)
declare(oneParticuleWithSofaTypedefs,   applications/tutorials/oneParticuleWithSofaTypedefs,    sofa_component sofaguimain sofaTypedefs)
declare(oneTetrahedron,      			applications/tutorials/oneTetrahedron,   				sofa_component sofaguimain)


contains(DEFINES, SOFA_HAVE_PLUGIN_ModelHierarchies) {
    declare(ModelHierarchies, applications/plugins/ModelHierarchies, sofa_component sofa_component_dev )
    declare(ModelHierarchies_test, applications/projects/ModelHierarchies_test, ModelHierarchies sofaguimain sofa_component sofa_component_dev sofa_base_animation_loop sofa_eigen2_solver )
    enable(ModelHierarchies)
    enable(ModelHierarchies_test)
}

contains(DEFINES, SOFA_HAVE_PLUGIN_Compliant) {
    declare(Compliant, applications/plugins/Compliant, sofaguiqt sofa_eigen2_solver   )
    declare(Compliant_test, applications/projects/Compliant_test, sofa_eigen2_solver Compliant Flexible sofa_component sofaobjectcreator sofaguimain )
    enable(Compliant)
    enable(Compliant_test)
}
contains(DEFINES, SOFA_HAVE_PLUGIN_Flexible) {
    declare(Flexible, applications/plugins/Flexible, sofaguiqt sofa_eigen2_solver   )
    enable(Flexible)
}



######################################################################
# Enable artifacts
######################################################################
!contains (DEFINES, SOFA_RELEASE) { # BEGIN !SOFA_RELEASE
	enable(sofabgl)
} # END !SOFA_RELEASE

contains(DEFINES, SOFA_DEV) { # BEGIN SOFA_DEV
	
	contains(DEFINES, SOFA_EXTLIBS_METIS) {
		enable(metis)
	}
	contains(DEFINES, SOFA_EXTLIBS_TAUCS) {
		enable(taucs)
	}
	contains(DEFINES, SOFA_EXTLIBS_TAUCS_MT) {
		enable(taucs_mt)
	}
	contains(DEFINES, SOFA_HAVE_COLLADADOM) {
		enable(colladadom)
	}
} # END SOFA_DEV

contains(DEFINES, SOFA_HAVE_CSPARSE) {
	enable(csparse)
}
!contains(DEFINES, SOFA_HAVE_FLOWVR) {
	enable(miniFlowVR)
} else {
	enable(flowvr)
	enable(SofaFlowVR)
}
contains(DEFINES, SOFA_GUI_QGLVIEWER) {
	enable(QGLViewer)
}

enable(thrust)
enable(qtgui)

enable(newmat)
enable(tinyxml)
enable(qwt)

enable(sofahelper)
enable(sofadefaulttype)
enable(sofacore)

enable(sofasimulation)
enable(sofatree)
contains (DEFINES, SOFA_DEV) {
	enable(sofagraph)
} # END !SOFA_DEV

enable(sofa_component_base)
enable(sofa_component_common)
enable(sofa_component_general)
enable(sofa_component_advanced)
enable(sofa_component_misc)
enable(sofa_component)

enable(sofa_base_topology)
enable(sofa_base_linear_solver)
enable(sofa_base_mechanics)
enable(sofa_base_visual)
enable(sofa_base_collision)
enable(sofa_base_animation_loop)
enable(sofa_loader)
enable(sofa_rigid)
enable(sofa_deformable)
enable(sofa_simple_fem)
enable(sofa_mesh_collision)
enable(sofa_implicit_ode_solver)
enable(sofa_explicit_ode_solver)
enable(sofa_exporter)
enable(sofa_validation)
enable(sofa_engine)
enable(sofa_graph_component)
enable(sofa_topology_mapping)
enable(sofa_boundary_condition)
enable(sofa_object_interaction)
enable(sofa_user_interaction)
enable(sofa_constraint)
enable(sofa_haptics)
enable(sofa_dense_solver)
enable(sofa_preconditioner)
enable(sofa_opengl_visual)
enable(sofa_eulerian_fluid)
enable(sofa_sph_fluid)
enable(sofa_volumetric_data)
enable(sofa_non_uniform_fem)
contains(DEFINES, SOFA_DEV) { # BEGIN SOFA_DEV
    enable(sofa_component_dev)
	enable(sofa_component_advanced_dev)
	enable(sofa_component_misc_dev)
	enable(sofa_advanced_interaction)
	enable(sofa_advanced_constraint)
	enable(sofa_advanced_fem)
	enable(sofa_mjed_fem)
	enable(sofa_non_uniform_fem_dev)
	enable(sofa_misc_topology_dev)
	enable(sofa_misc_mapping_dev)
	enable(sofa_misc_forcefield_dev)
	enable(sofa_misc_fem_dev)
	enable(sofa_misc_collision_dev)
	enable(sofa_misc_solver_dev)
	enable(sofa_misc_dev)
} # END SOFA_DEV

contains(DEFINES, SOFA_HAVE_EIGEN2) {
    enable(eigen)
	enable(sofa_eigen2_solver)
}
contains(DEFINES, SOFA_HAVE_CSPARSE) {
	enable(sofa_sparse_solver)
}
contains(DEFINES, SOFA_HAVE_TAUCS) | contains(DEFINES, SOFA_EXTLIBS_TAUCS_MT) {
	enable(sofa_taucs_solver)
}
contains(DEFINES, SOFA_HAVE_PARDISO) {
	enable(sofa_pardiso_solver)
}
enable(sofa_misc_topology)
enable(sofa_misc_mapping)
enable(sofa_misc_forcefield)
enable(sofa_misc_fem)
enable(sofa_misc_engine)
enable(sofa_misc_collision)
enable(sofa_misc_solver)
enable(sofa_misc)

enable(sofagui)
enable(sofaguiqt)
enable(sofaguimain)

enable(runSofa)
enable(generateDoc)
enable(GenerateRigid)
enable(generateTypedefs)
enable(sofaTypedefs)
enable(meshconv)
enable(sofaInitTimer)
enable(sofaVerification)
enable(sofaInfo)
enable(sofaBatch)
enable(sofaobjectcreator)  # used in verification programs

contains(DEFINES, SOFA_HAVE_BOOST) {
	enable(sofatests)
}

contains(DEFINES, SOFA_GUI_QTVIEWER) | contains(DEFINES, SOFA_GUI_QGLVIEWER) | contains(DEFINES, SOFA_GUI_QTOGREVIEWER) {
	#enable(sofaConfiguration) # not yet converted
	enable(sofamodeler)
	enable(Modeler)
#	enable(runLem)
}

contains(DEFINES, SOFA_GUI_GLUT) {
	enable(sofaguiglut)
}


contains (DEFINES, SOFA_HAVE_TUTORIALS) {
	enable(chainHybrid)
	enable(houseOfCards)
	enable(mixedPendulum)
	enable(oneParticule)
#	enable(oneParticuleWithSofaTypedefs)  # temporarily discarded since it can not compile with the Flexible plugin
	enable(oneTetrahedron)
}

#contains (DEFINES, SOFA_HAVE_PYTHON) {
#	# TODO: python depends on boost.python
#	enable(sofaPython)
#}



contains(DEFINES, SOFA_GPU_CUDA) {
	enable(sofagpucuda)
	enable(sofaCUDA)
}

contains(DEFINES, SOFA_GPU_OPENCL) {
    enable(sofagpuopencl)
    enable(sofaOPENCL)
}

contains(DEFINES, SOFA_DEV) { # BEGIN SOFA_DEV
	contains(DEFINES, SOFA_HAVE_VDD) {
		#enable(SofaDevices)
	}
	contains(DEFINES, SOFA_HAVE_VRPN) {
		enable(vrpn_quat)
		enable(vrpn_client)
        unix: enable(vrpn_atmellib)
        unix: enable(vrpn_server)
		enable(SofaVRPNServer)
	}
	contains(DEFINES, SOFA_GPU_CUDA) {
		contains(DEFINES, SOFA_GPU_CUDPP) {
			enable(cudpp)
		}
      		enable(sofagpucuda_dev)
# This project should be enable in sofa_dependencies-local.prf
#		enable(sofaCUDA_Bench)
	}

} # END SOFA_DEV

!contains (DEFINES, SOFA_RELEASE) { # BEGIN !SOFA_RELEASE
	contains(DEFINES, SOFA_HAVE_VDD) {
		#enable(SofaDevices)
	}
	contains(DEFINES, SOFA_HAVE_VRPN) {
		#enable(SofaVRPN)
	}
    
    contains (DEFINES, SOFA_PML) {
	    enable(sofapml)
    }

    contains (DEFINES, SOFA_HAVE_BOOSTKERNEL) {
    # SOFA_HAVE_BOOSTKERNEL depend of SOFA_HAVE_TUTORIALS
    DEFINES += SOFA_HAVE_BOOSTKERNEL
    	enable(centerOfMassMapping)
    	enable(centerOfMassMulti2MappingChain)
    	enable(centerOfMassMultiMappingChain)
    	enable(subsetMultimapping)
    }
} # END !SOFA_RELEASE


}
