includeOnce($$_FILE_) {

declare(boost,  boost.prf)
declare(cgal,   cgal.prf)
declare(cilk,   cilk.prf)
declare(cuda,   cuda.prf)
declare(flowvr, flowvr.prf)
declare(fltk,   fltk.prf)
declare(glut,   glut.prf)
declare(glew,   glew.prf)
declare(libpng, libpng.prf)
declare(libxml, libxml.prf)
declare(qt,     qt.prf)
declare(qtgui,  qtgui.prf, qt)
declare(zlib,   zlib.prf)
declare(system-metis,  system-metis.prf)
declare(system-taucs,  system-taucs.prf)

######################################################################
# Extlibs
######################################################################

declare(newmat,     extlibs/newmat)
declare(tinyxml,    extlibs/tinyxml)
declare(eigen,      extlibs/eigen-3.0.1/eigen.pro)
declare(qwt,        extlibs/qwt-5.2.0/src, qtgui)
declare(QGLViewer,  extlibs/libQGLViewer-2.3.3/QGLViewer, qtgui)
declare(miniFlowVR, extlibs/miniFlowVR, boost)
declare(csparse,    extlibs/csparse)
declare(cudpp,      extlibs/cudpp, cuda)
#declare(cudpp,     extlibs/cudpp-svn/cudpp.pro, cuda)
declare(metis,      extlibs/metis)
declare(taucs,      extlibs/taucs, cilk metis system-metis)
declare(taucs_mt,   extlibs/taucs_mt, metis system-metis)
declare(colladadom, extlibs/colladadom, tinyxml)

######################################################################
# Framework
######################################################################

declare(sofahelper,      framework/sofa/helper,      newmat glew glut libpng boost)
declare(sofadefaulttype, framework/sofa/defaulttype, sofahelper)
declare(sofacore,        framework/sofa/core,        sofadefaulttype)

######################################################################
# Modules
######################################################################

declare(sofasimulation, modules/sofa/simulation/common, sofacore tinyxml)
declare(sofatree,       modules/sofa/simulation/tree,   sofasimulation)
declare(sofabgl,        modules/sofa/simulation/bgl,    sofasimulation)
declare(sofapml,        modules/sofa/simulation/filemanager/sofapml, sofacomponentcollision)

declare(base_topology, modules/sofa/component/base_topology.pro, sofatree)
declare(base_linear_solver, modules/sofa/component/base_linear_solver.pro, sofatree)
declare(base_mechanics, modules/sofa/component/base_mechanics.pro, base_topology base_linear_solver)
declare(rigid, modules/sofa/component/rigid.pro, base_mechanics)
declare(base_collision, modules/sofa/component/base_collision.pro, base_mechanics rigid miniFlowVR)
declare(base_master_solver, modules/sofa/component/base_master_solver.pro, sofatree)
declare(base_visual, modules/sofa/component/base_visual.pro, sofatree)
declare(loader, modules/sofa/component/loader.pro, sofatree)
declare(deformable, modules/sofa/component/deformable.pro, sofatree)
declare(simple_fem, modules/sofa/component/simple_fem.pro, sofatree)
declare(object_interaction, modules/sofa/component/object_interaction.pro, deformable)
declare(explicit_ode_solver, modules/sofa/component/explicit_ode_solver.pro, sofatree)
declare(implicit_ode_solver, modules/sofa/component/implicit_ode_solver.pro, sofatree)
declare(eigen2_solver, modules/sofa/component/eigen2_solver.pro, dense_solver eigen)
declare(mesh_collision, modules/sofa/component/mesh_collision.pro, object_interaction base_collision explicit_ode_solver implicit_ode_solver eigen2_solver eigen)
declare(validation, modules/sofa/component/validation.pro, base_collision loader)
declare(exporter, modules/sofa/component/exporter.pro, sofatree)
declare(engine, modules/sofa/component/engine.pro, base_collision)
declare(graph_component, modules/sofa/component/graph_component.pro, sofatree)
declare(topology_mapping, modules/sofa/component/topology_mapping.pro, sofatree)
declare(boundary_condition, modules/sofa/component/boundary_condition.pro, sofatree)
declare(user_interaction, modules/sofa/component/user_interaction.pro, base_collision deformable boundary_condition)
declare(constraint, modules/sofa/component/constraint.pro, preconditioner mesh_collision simple_fem eigen)
declare(haptics, modules/sofa/component/haptics.pro, constraint)
declare(dense_solver, modules/sofa/component/dense_solver.pro, base_linear_solver)
declare(sparse_solver, modules/sofa/component/sparse_solver.pro, base_linear_solver csparse metis)
declare(preconditioner, modules/sofa/component/preconditioner.pro, dense_solver sparse_solver)
declare(opengl_visual, modules/sofa/component/opengl_visual.pro, base_visual)
declare(eulerian_fluid, modules/sofa/component/eulerian_fluid.pro, sofatree)
declare(sph_fluid, modules/sofa/component/sph_fluid.pro, sofatree)
declare(volumetric_data, modules/sofa/component/volumetric_data.pro, base_collision miniFlowVR)
declare(non_uniform_fem, modules/sofa/component/non_uniform_fem.pro, simple_fem opengl_visual dense_solver volumetric_data eigen)
declare(advanced_fem, modules/sofa/component/advanced_fem.pro, sofatree eigen)
declare(mjed_fem, modules/sofa/component/mjed_fem.pro, sofatree eigen)
declare(advanced_interaction, modules/sofa/component/advanced_interaction.pro, implicit_ode_solver simple_fem constraint topology_mapping user_interaction csparse)
declare(advanced_constraint, modules/sofa/component/advanced_constraint.pro, boundary_condition haptics constraint)
declare(taucs_solver, modules/sofa/component/taucs_solver.pro, sofatree taucs taucs_mt)
#declare(pardiso_solver, modules/sofa/component/pardiso_solver.pro, sofatree)
declare(misc_topology, modules/sofa/component/misc_topology.pro, non_uniform_fem miniFlowVR)
declare(misc_topology_dev, modules/sofa/component/misc_topology_dev.pro, non_uniform_fem)
declare(misc_mapping, modules/sofa/component/misc_mapping.pro, simple_fem)
declare(misc_mapping_dev, modules/sofa/component/misc_mapping_dev.pro, simple_fem)
declare(misc_forcefield, modules/sofa/component/misc_forcefield.pro, boundary_condition preconditioner misc_topology)
declare(misc_forcefield_dev, modules/sofa/component/misc_forcefield_dev.pro, boundary_condition preconditioner misc_topology)
declare(misc_fem, modules/sofa/component/misc_fem.pro, advanced_fem)
declare(misc_fem_dev, modules/sofa/component/misc_fem_dev.pro, advanced_fem)
declare(misc_engine, modules/sofa/component/misc_engine.pro, non_uniform_fem)
declare(misc_collision, modules/sofa/component/misc_collision.pro, mesh_collision)
declare(misc_collision_dev, modules/sofa/component/misc_collision_dev.pro, mesh_collision sofabgl)
declare(misc_solver, modules/sofa/component/misc_solver.pro, sofatree)
declare(misc_solver_dev, modules/sofa/component/misc_solver_dev.pro, sofatree)
declare(misc, modules/sofa/component/misc.pro, base_collision)
declare(misc_dev, modules/sofa/component/misc_dev.pro, base_collision)

declare(component_base, modules/sofa/component/component_base.pro, base_topology base_master_solver)
declare(component_common, modules/sofa/component/component_common.pro, loader deformable simple_fem object_interaction explicit_ode_solver implicit_ode_solver eigen2_solver mesh_collision)
declare(component_general, modules/sofa/component/component_general.pro, validation exporter engine graph_component topology_mapping boundary_condition user_interaction constraint haptics dense_solver sparse_solver preconditioner opengl_visual)
declare(component_advanced, modules/sofa/component/component_advanced.pro, eulerian_fluid sph_fluid volumetric_data non_uniform_fem advanced_fem mjed_fem advanced_interaction advanced_constraint taucs_solver)
declare(component_misc, modules/sofa/component/component_misc.pro, misc_topology misc_topology_dev misc_mapping misc_mapping_dev misc_forcefield misc_forcefield_dev misc_fem misc_fem_dev misc_engine misc_collision misc_collision_dev misc_solver misc_solver_dev misc misc_dev)
declare(component, modules/sofa/component/component.pro, component_base component_common component_general component_advanced component_misc)

declare(sofagpucuda, modules/sofa/gpu/cuda, sofahelper csparse cudpp taucs taucs_mt system-taucs cuda)

######################################################################
# Applications
######################################################################
#----- Sofa -----#
declare(sofagui,     applications/sofa/gui/libgui.pro,     graph_component)
declare(sofaguiqt,   applications/sofa/gui/qt,             sofagui qwt QGLViewer)
declare(sofaguimain, applications/sofa/gui/libguimain.pro, sofaguiqt sofaguiglut component sofagpucuda)
declare(sofaguiglut, applications/sofa/gui/glut,           sofagui glut)
declare(sofaguifltk, applications/sofa/gui/fltk,           sofaguiqt fltk)
#--- Projects ---#
declare(runSofa,          applications/projects/runSofa,          sofaguimain)
declare(generateDoc,      applications/projects/generateDoc,      component sofagpucuda)
declare(GenerateRigid,    applications/projects/GenerateRigid,    component sofagpucuda)
declare(generateTypedefs, applications/projects/generateTypedefs, sofaguimain)
declare(meshconv,         applications/projects/meshconv,         component)
declare(sofamodeler,      applications/projects/Modeler/lib,      sofaguimain)
declare(Modeler,          applications/projects/Modeler/exec,     sofamodeler)
declare(sofaCUDA,         applications/projects/sofaCUDA,         sofaguimain sofagpucuda)
declare(sofaCUDA_Bench,   applications/projects/sofaCUDA_Bench,         sofaguimain sofagpucuda)
declare(SofaFlowVR,       applications/projects/SofaFlowVR,       sofaguimain)
declare(sofaInitTimer,    applications/projects/sofaInitTimer,    component sofagpucuda)
declare(sofaVerification, applications/projects/sofaVerification, component sofagpucuda)
#declare(runLem,          applications/projects/fissuration/lem/exe,     sofaguimain)

declare(centerOfMassMapping,            applications/projects/BoostKernel/applications/centerOfMassMapping,             component sofaobjectcreator sofaguimain)
declare(centerOfMassMulti2MappingChain, applications/projects/BoostKernel/applications/centerOfMassMulti2MappingChain,  component sofaobjectcreator sofaguimain)
declare(centerOfMassMultiMappingChain,  applications/projects/BoostKernel/applications/centerOfMassMultiMappingChain,   component sofaobjectcreator sofaguimain)
declare(subsetMultimapping,             applications/projects/BoostKernel/applications/subsetMultimapping,              component sofaobjectcreator sofaguimain)

declare(sofatests,        tests,                                  sofacore)
# SofaVRPN
# SofaDevices
# Haptic
#--- Tutorials ---#
declare(sofaobjectcreator,   applications/tutorials/objectCreator,    component)
declare(chainHybrid,         applications/tutorials/chainHybrid,      component sofaguimain sofaobjectcreator)
declare(houseOfCards,        applications/tutorials/houseOfCards,     component sofaguimain sofaobjectcreator)
declare(mixedPendulum,       applications/tutorials/mixedPendulum,    component sofaguimain)
declare(oneParticule,        applications/tutorials/oneParticule,     component sofaguimain)
declare(oneTetrahedron,      applications/tutorials/oneTetrahedron,   component sofaguimain)
######################################################################
# Enable artifacts
######################################################################

contains(DEFINES, SOFA_DEV) {
	enable(sofabgl)
	
	contains(DEFINES, SOFA_EXTLIBS_METIS) {
		enable(metis)
	}
	contains(DEFINES, SOFA_EXTLIBS_TAUCS) {
		enable(taucs)
	}
	contains(DEFINES, SOFA_EXTLIBS_TAUCS_MT) {
		enable(taucs_mt)
	}
	contains(DEFINES, SOFA_HAVE_COLLADADOM) {
		enable(colladadom)
	}
}

contains(DEFINES, SOFA_HAVE_CSPARSE) {
	enable(csparse)
}
!contains(DEFINES, SOFA_HAVE_FLOWVR) {
	enable(miniFlowVR)
} else {
	enable(flowvr)
	enable(SofaFlowVR)
}
contains(DEFINES, SOFA_GUI_QGLVIEWER) {
	enable(QGLViewer)
}

enable(newmat)
enable(tinyxml)
enable(eigen)
enable(qwt)

enable(sofahelper)
enable(sofadefaulttype)
enable(sofacore)

enable(sofasimulation)
enable(sofatree)

enable(component_base)
enable(component_common)
enable(component_general)
enable(component_advanced)
enable(component_misc)
enable(component)

enable(base_topology)
enable(base_linear_solver)
enable(base_mechanics)
enable(base_visual)
enable(base_collision)
enable(base_master_solver)
enable(loader)
enable(rigid)
enable(deformable)
enable(simple_fem)
enable(mesh_collision)
enable(implicit_ode_solver)
enable(explicit_ode_solver)
enable(exporter)
enable(validation)
enable(engine)
enable(graph_component)
enable(topology_mapping)
enable(boundary_condition)
enable(object_interaction)
enable(user_interaction)
enable(constraint)
enable(haptics)
enable(dense_solver)
enable(sparse_solver)
enable(preconditioner)
enable(opengl_visual)
enable(eulerian_fluid)
enable(sph_fluid)
enable(volumetric_data)
enable(non_uniform_fem)
enable(advanced_fem)
enable(mjed_fem)
enable(advanced_interaction)
enable(advanced_constraint)
enable(eigen2_solver)
enable(taucs_solver)
#enable(pardiso_solver)
enable(misc_topology)
enable(misc_topology_dev)
enable(misc_mapping)
enable(misc_mapping_dev)
enable(misc_forcefield)
enable(misc_forcefield_dev)
enable(misc_fem)
enable(misc_fem_dev)
enable(misc_engine)
enable(misc_collision)
enable(misc_collision_dev)
enable(misc_solver)
enable(misc_solver_dev)
enable(misc)
enable(misc_dev)

enable(sofagui)
enable(sofaguiqt)
enable(sofaguimain)

enable(runSofa)
enable(generateDoc)
enable(GenerateRigid)
enable(generateTypedefs)
enable(meshconv)
enable(sofaInitTimer)
enable(sofaVerification)

contains(DEFINES, SOFA_HAVE_BOOST) {
	enable(sofatests)
}

contains(DEFINES, SOFA_GUI_QTVIEWER) | contains(DEFINES, SOFA_GUI_QGLVIEWER) | contains(DEFINES, SOFA_GUI_QTOGREVIEWER) {
	#enable(sofaConfiguration) # not yet converted
	enable(sofamodeler)
	enable(Modeler)
#	enable(runLem)
}

contains(DEFINES, SOFA_GPU_OPENCL) {
	# enable(sofaOPENCL) # not yet converted
}

contains(DEFINES, SOFA_GUI_GLUT) {
	enable(sofaguiglut)
}

contains(DEFINES, SOFA_HAVE_CHAI3D) {
	#enable(Haptic)
}

contains(DEFINES, SOFA_DEV) { # BEGIN SOFA_DEV
	contains (DEFINES, SOFA_GUI_FLTK) {
		enable(sofaguifltk)
	}
	contains(DEFINES, SOFA_HAVE_VDD) {
		#enable(SofaDevices)
	}
	contains(DEFINES, SOFA_HAVE_VRPN) {
		#enable(SofaVRPN)
	}
	contains(DEFINES, SOFA_GPU_CUDA) {
		contains(DEFINES, SOFA_GPU_CUDPP) {
			enable(cudpp)
		}
		enable(sofagpucuda)
		enable(sofaCUDA)
# This project should be enable in sofa_dependencies-local.prf
#		enable(sofaCUDA_Bench)
	}
} # END SOFA_DEV

contains (DEFINES, SOFA_PML) {
	enable(sofapml)
}

contains (DEFINES, SOFA_HAVE_TUTORIALS) {
	enable(sofaobjectcreator)
	enable(chainHybrid)
	enable(houseOfCards)
	enable(mixedPendulum)
	enable(oneParticule)
	enable(oneTetrahedron)
}


contains (DEFINES, SOFA_HAVE_BOOSTKERNEL) {
# SOFA_HAVE_BOOSTKERNEL depend of SOFA_HAVE_TUTORIALS
DEFINES += SOFA_HAVE_BOOSTKERNEL
	enable(centerOfMassMapping)
	enable(centerOfMassMulti2MappingChain)
	enable(centerOfMassMultiMappingChain)
	enable(subsetMultimapping)
}


}
