# CMake package configuration file for the SofaCUDA plugin

@PACKAGE_GUARD@
@PACKAGE_INIT@

list(FIND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}" HAS_SOFACUDA_CMAKE_MODULE_PATH)
if(HAS_SOFACUDA_CMAKE_MODULE_PATH EQUAL -1)
    list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
endif()

set(SOFACUDA_ARCH @SOFACUDA_ARCH@)

find_package(Sofa.Component.Mass REQUIRED)
find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED)
find_package(Sofa.Component.SolidMechanics.FEM.HyperElastic REQUIRED)
find_package(Sofa.Component.SolidMechanics.TensorMass REQUIRED)
find_package(Sofa.Component.Collision.Response.Contact REQUIRED)
find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED)
find_package(Sofa.Component.StateContainer REQUIRED)
find_package(Sofa.Component.Constraint.Projective REQUIRED)
find_package(Sofa.Component.Mapping.Linear REQUIRED)
find_package(Sofa.Component.Mapping.NonLinear REQUIRED)
find_package(Sofa.Component.Engine.Select REQUIRED)
find_package(Sofa.Component.Engine.Transform REQUIRED)
find_package(VolumetricRendering QUIET)
find_package(Sofa.Component.MechanicalLoad REQUIRED)
find_package(CUDA REQUIRED)

set(SOFACUDA_HAVE_SOFA_GL @SOFACUDA_HAVE_SOFA_GL@)
if(SOFACUDA_HAVE_SOFA_GL)
	find_package(Sofa.GL REQUIRED)
endif()

if(NOT TARGET SofaCUDA)
	include("${CMAKE_CURRENT_LIST_DIR}/SofaCUDATargets.cmake")
endif()

check_required_components(SofaCUDA)

include(SofaCUDANvccFlags)
