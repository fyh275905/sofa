<Node name="root" dt="0.02" showBehaviorModels="0" showCollisionModels="0" showMappings="0" showForceFields="0" >
	<!-- <Object type="Simulation" name="Simulation" /> -->
	<Object type="CollisionPipeline" verbose="0" name="CollisionPipeline"/>
	<Object type="BruteForceDetection" name="N2" />
	<Object type="CollisionResponse" response="default" name="collision response"/>
	<!--<Object type="CollisionGroup" />-->
	<Node name="Liver" depend="topo dofs">
		<!--<Object type="CGImplicit" iterations="25"/>-->
		<Object type="EulerImplicit" name="cg_odesolver" printLog="false"/>
		<Object type="CGLinearSolver" iterations="25" name="linear solver" tolerance="1.0e-9" threshold="1.0e-9" />
        	<Object type="MeshLoader" name="meshLoader" filename="mesh/liver.msh"/>
		<Object type="MechanicalObject" name="dofs" />
		<!-- Container for the tetrahedra-->
		<Object type="TetrahedronSetTopologyContainer" name="topo"/>
		<!-- Algorithms: used in DiagonalMass to compute the mass -->
		<Object type="TetrahedronSetGeometryAlgorithms" name="GeomAlgo"  />
		<Object type="DiagonalMass" massDensity="1" name="computed using mass density"/>
		<Object type="TetrahedralCorotationalFEMForceField" name="FEM" youngModulus="500" poissonRatio="0.3" computeGlobalMatrix="false" method="large"/> 
                <Object type="FixedConstraint" name="FixedConstraint" indices="3 39 64" />

		<Node name="Visu">
		<!-- Using material contained in liver-smooth.obj -->
			<Object type="OglModel" name="VisualModel" fileMesh="mesh/liver-smooth.obj"  />
			<Object type="BarycentricMapping" object1="../.." object2="VisualModel" name="visual mapping"/>
		</Node>
		<Node name="Surf">
			<Object type="Sphere" name="CollisionModel" filename="mesh/liver.sph" />
			<Object type="BarycentricMapping" name="sphere mapping"/>
		</Node>
	</Node>
</Node>
