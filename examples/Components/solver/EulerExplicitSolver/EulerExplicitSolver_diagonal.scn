<!--
This scene shows an example of a forward Euler integration scheme.
This is the variant of the component EulerExplicitSolver where the Data
'symplectic' is set to false (true by default).
In this example, the mass is diagonal. Since it can be inverted
trivially, it does not require a linear solver.
-->

<Node name="root" gravity="0 -9.81 0" dt="0.00001">
    <RequiredPlugin name="SofaBoundaryCondition"/>
    <RequiredPlugin name="SofaDeformable"/>
    <RequiredPlugin name="SofaEngine"/>
    <RequiredPlugin name="SofaExplicitOdeSolver"/>
    <RequiredPlugin name="SofaLoader"/>
    <RequiredPlugin name="SofaOpenglVisual"/>
    <RequiredPlugin name="SofaTopologyMapping"/>

    <VisualStyle displayFlags="showBehaviorModels showForceFields" />

    <Node name="DeformableObject">

        <!-- Matrix system is diagonal because integration is explicit and Mass is diagonal -->
        <!-- No need for a LinearSolver -->
        <EulerExplicitSolver name="odeExplicitSolver" symplectic="false"/>

        <MechanicalObject name="dofs"/>

        <RegularGridTopology name="topology" nx="4" ny="4" nz="11" xmin="-1.5" xmax="1.5" ymin="-1.5" ymax="1.5" zmin="0" zmax="10" />
        <HexahedronSetGeometryAlgorithms/>
        <UniformMass totalMass="15"/>

        <BoxROI box="-1.5 -1.5 0 1.5 1.5 0.0001" name="box"/>
        <FixedConstraint indices="@box.indices" />
        <MeshSpringForceField stiffness="3E2"/>

        <Node name="visual">
            <QuadSetTopologyContainer  name="Container" />
            <QuadSetTopologyModifier/>
            <Hexa2QuadTopologicalMapping input="@../topology" output="@Container" />
            <OglModel name="Visual" color="yellow" quads="@Container.quads" />
            <IdentityMapping input="@../dofs" output="@Visual" />
        </Node>

    </Node>

    <Node name="floor-visual">
        <MeshObjLoader name="meshLoader" filename="mesh/floorFlat.obj" scale3d="0.5 0.5 0.5"/>
        <OglModel src="@meshLoader" dy="-8" dz="10"/>
        <OglModel src="@meshLoader" rx="90" dy="2"/>
    </Node>
</Node>
