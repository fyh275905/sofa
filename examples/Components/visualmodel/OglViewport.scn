
<Node name="root" dt="0.02" showBehaviorModels="0" showCollisionModels="0" showMappings="0" showForceFields="0" >
	<!-- <Object type="Simulation" name="Simulation" /> -->
	<CollisionPipeline verbose="0" name="CollisionPipeline"/>
	<BruteForceDetection name="N2" />
	<CollisionResponse response="default" name="collision response"/>
	<!--<Object type="CollisionGroup" />-->
	<Node name="Liver" depend="topo dofs">
		<!--<Object type="CGImplicit" iterations="25"/>-->
		<EulerImplicit name="cg_odesolver" printLog="false"  />
		<CGLinearSolver iterations="25" name="linear solver" tolerance="1.0e-9" threshold="1.0e-9"  />
        	<MeshLoader name="meshLoader" filename="mesh/liver.msh"/>
		<!-- Container for the tetrahedra-->
		<TetrahedronSetTopologyContainer name="topo" />
		<MechanicalObject name="dofs"  />
		<!-- Algorithms: used in DiagonalMass to compute the mass -->
		<TetrahedronSetGeometryAlgorithms name="GeomAlgo"  />
		<DiagonalMass massDensity="1" name="computed using mass density"  />
		<TetrahedralCorotationalFEMForceField name="FEM" youngModulus="500" poissonRatio="0.3" computeGlobalMatrix="false" method="large"  />
                <FixedConstraint name="FixedConstraint" indices="3 39 64"  />

		<Node name="Visu" tags="Visual">
		<!-- Using material contained in liver-smooth.obj -->
			<OglModel name="VisualModel" fileMesh="mesh/liver-smooth.obj"  />
			<BarycentricMapping object1="../.." object2="VisualModel" name="visual mapping"/>
		</Node>

		<Node name="Surf">
			<Sphere name="CollisionModel" filename="mesh/liver.sph" />
			<MechanicalObject  />
			<BarycentricMapping name="sphere mapping"  />
		</Node>
	</Node>
	
	<OglViewport screenPosition="0 0" screenSize="250 250" cameraPosition="-0.887221 -2.93985 -13.9098" cameraOrientation="0.101682 -0.978843 -0.174841 0.030936" />
	<OglViewport screenPosition="300 0" screenSize="400 400" cameraPosition="-0.556394 -3.36091 -6.69175" cameraOrientation="-0.0207405 -0.705349 -0.21101 -0.676408" />
</Node>

