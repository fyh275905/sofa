cmake_minimum_required(VERSION 2.8.12)
project(QGLViewer)

set(HEADER_FILES
	qglviewer.h
	camera.h
	manipulatedFrame.h
	manipulatedCameraFrame.h
	frame.h
	keyFrameInterpolator.h)

set(SOURCE_FILES
	qglviewer.cpp
	camera.cpp
	manipulatedFrame.cpp
	manipulatedCameraFrame.cpp
	frame.cpp
	saveSnapshot.cpp
	constraint.cpp
	keyFrameInterpolator.cpp
	mouseGrabber.cpp
	quaternion.cpp
	vec.cpp

	VRender/BackFaceCullingOptimizer.cpp
	VRender/EPSExporter.cpp
	VRender/FIGExporter.cpp
	VRender/NVector3.cpp
	VRender/Primitive.cpp
	VRender/TopologicalSortMethod.cpp
	VRender/Vector3.cpp
	VRender/VRender.cpp
	VRender/BSPSortMethod.cpp
	VRender/Exporter.cpp
	VRender/gpc.cpp
	VRender/ParserGL.cpp
	VRender/PrimitivePositioning.cpp
	VRender/Vector2.cpp
	VRender/VisibilityOptimizer.cpp)

set(UI_FILES
	ImageInterface.ui
 	VRenderInterface.ui)

find_package(OpenGL REQUIRED)
find_package(Qt4 REQUIRED QtCore QtOpenGL QtXml)
include(${QT_USE_FILE})

qt4_wrap_cpp(MOC_FILES ${HEADER_FILES})
qt4_wrap_ui(FORM_FILES ${UI_FILES})

# These header files don't need to be processed by the moc.
list(APPEND HEADER_FILES
	config.h
	constraint.h
	domUtils.h
	mouseGrabber.h
	quaternion.h
	vec.h

	VRender/AxisAlignedBox.h
	VRender/Exporter.h
	VRender/gpc.h
	VRender/NVector3.h
	VRender/Optimizer.h
	VRender/ParserGL.h
	VRender/Primitive.h
	VRender/PrimitivePositioning.h
	VRender/SortMethod.h
	VRender/Types.h
	VRender/Vector2.h
	VRender/Vector3.h
	VRender/VRender.h)

set(QGLVIEWER_VERSION 2.4.0)

add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${MOC_FILES} ${FORM_FILES} ${SOURCE_FILES})
set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER "SofaExtlibs")
target_link_libraries(${PROJECT_NAME} ${OPENGL_LIBRARIES} ${QT_LIBRARIES})
target_include_directories(${PROJECT_NAME} PRIVATE ${QT_INCLUDES})
# Contains the files generated by the Qt MOC.
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
target_include_directories(tinyxml PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>")

if(WIN32)
    target_compile_options(${PROJECT_NAME} PUBLIC "-DCREATE_QGLVIEWER_DLL")
endif()

set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX "_d")
set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${QGLVIEWER_VERSION})
set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${HEADER_FILES}")

install(TARGETS ${PROJECT_NAME}
        EXPORT QGLViewerTargets
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        PUBLIC_HEADER DESTINATION include)

include(CMakePackageConfigHelpers)

# QGLViewerConfigVersion.cmake file (same for build tree and intall)
write_basic_package_version_file(${CMAKE_BINARY_DIR}/QGLViewer/QGLViewerConfigVersion.cmake
                                 VERSION ${QGLVIEWER_VERSION}
                                 COMPATIBILITY AnyNewerVersion)

install(FILES ${CMAKE_BINARY_DIR}/QGLViewer/QGLViewerConfigVersion.cmake
        DESTINATION lib/cmake/QGLViewer)


# QGLViewerConfig.cmake (build tree)
set(QGLVIEWER_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
configure_package_config_file(QGLViewerConfig.cmake.in
                              ${CMAKE_BINARY_DIR}/QGLViewer/QGLViewerConfig.cmake
                              INSTALL_DESTINATION ${CMAKE_BINARY_DIR}/QGLViewer/
                              PATH_VARS QGLVIEWER_INCLUDE_DIR)

# QGLViewerConfig.cmake (installed)
set(QGLVIEWER_INCLUDE_DIR include)
configure_package_config_file(QGLViewerConfig.cmake.in
                              ${CMAKE_BINARY_DIR}/QGLViewer/QGLViewerConfigInstall.cmake
                              INSTALL_DESTINATION lib/cmake/QGLViewer
                              PATH_VARS QGLVIEWER_INCLUDE_DIR)

install(FILES ${CMAKE_BINARY_DIR}/QGLViewer/QGLViewerConfigInstall.cmake
        DESTINATION lib/cmake/QGLViewer
        RENAME QGLViewerConfig.cmake)

# QGLViewerTargets.cmake (installed)
install(EXPORT QGLViewerTargets
        DESTINATION lib/cmake/QGLViewer)
